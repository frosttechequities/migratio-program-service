# Server configuration
PORT=8080
NODE_ENV=development

# JWT configuration
JWT_SECRET=your-jwt-secret-for-api-gateway
JWT_EXPIRATION=1h # Example: 1 hour, adjust as needed

# Redis configuration (for rate limiting, caching, etc.)
# These are prefixed with EG_ for Express Gateway's default env var handling,
# or you can map them within policy configurations.
# For direct use in policies as per markdown:
REDIS_HOST=localhost # Or your redis service name, e.g., 'redis' in Docker
REDIS_PORT=6379
# REDIS_PASSWORD=
# REDIS_DB=0

# Service endpoints (Express Gateway typically gets these from gateway.config.yml, not .env)
# The URLs in gateway.config.yml are static for now (e.g., http://user-service:3001)
# If dynamic configuration from .env is needed, gateway.config.js would be used.
# For clarity, these are the backend services the gateway proxies to:
# USER_SERVICE_URL=http://user-service:3001
# ASSESSMENT_SERVICE_URL=http://assessment-service:3002
# RECOMMENDATION_SERVICE_URL=http://recommendation-service:3003
# PROGRAM_SERVICE_URL=http://program-service:3004
# DOCUMENT_SERVICE_URL=http://document-service:3005
# ROADMAP_SERVICE_URL=http://roadmap-service:3006
# PDF_SERVICE_URL=http://pdf-generation-service:3007


# Rate limiting (example values, configure in gateway.config.yml policies)
# RATE_LIMIT_WINDOW_MS=60000
# RATE_LIMIT_MAX_REQUESTS=100

# CORS configuration (example, configure in gateway.config.yml policies)
# CORS_ORIGINS=http://localhost:3000,https://app.migratio.com

# Logging (configure in gateway.config.yml or system.config.yml policies)
# LOG_LEVEL=info
